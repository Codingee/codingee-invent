{"version":3,"sources":["components/Footer/styles.js","components/Footer/index.js","components/Header/styles.js","components/Header/index.js","pages/Home/index.js","globalStyles.js","router/index.js","translation.js","serviceWorker.js","index.js"],"names":["styled","footer","h4","NavLink","Link","Extra","a","section","LogoContainer","div","FooterContainer","props","left","p","SvgIcon","label","select","loadable","Container","withTranslation","t","SocialLink","href","src","target","rel","aria-label","bottom","border","type","justify","align","style","paddingTop","to","Header","header","Burger","width","NotHidden","Menu","h5","CustomNavLinkSmall","Label","span","Outline","MenuOutlined","padding","Span","Button","useState","isNavVisible","isSmallScreen","visible","setVisibility","onClose","MenuItem","scrollTo","id","document","getElementById","scrollIntoView","behavior","onClick","gutter","CSSTransition","in","timeout","classNames","unmountOnExit","closable","marginBottom","ContactFrom","ContentBlock","MiddleBlock","ScrollToTop","Home","first","title","IntroContent","content","text","button","icon","MiddleBlockContent","AboutContent","MissionContent","ProductContent","ContactContent","Styles","createGlobalStyle","Router","Fragment","i18n","use","XHR","LanguageDetector","init","debug","lng","fallbackLng","keySeparator","interpolation","escapeValue","resources","en","translations","translationEn","es","translationEs","ns","defaultNS","Boolean","window","location","hostname","match","App","I18nextProvider","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed4ab406.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Footer = styled.footer`\r\n  background: rgb(249, 250, 252);\r\n  padding: 2.5rem 0;\r\n`;\r\n\r\nexport const Title = styled.h4`\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n\r\n  @media screen and (max-width: 414px) {\r\n    padding: 1.5rem 0;\r\n  }\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  display: block;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.625rem;\r\n  transition: all 0.2s ease-in-out;\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #15418e;\r\n  }\r\n`;\r\n\r\nexport const Target = styled.a`\r\n  display: block;\r\n  font-size: 1rem;\r\n  margin-bottom: 0.625rem;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #15418e;\r\n  }\r\n`;\r\n\r\nexport const Extra = styled.section`\r\n  background: rgb(249, 250, 252);\r\n  position: relative;\r\n  width: 100%;\r\n  padding-right: 25px;\r\n  padding-left: 25px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-bottom: 2rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nexport const Select = styled.div`\r\n  line-height: 24px;\r\n\r\n  @media only screen and (min-width: 1024px) {\r\n    padding: 0 10%;\r\n  }\r\n`;\r\n\r\nexport const Para = styled.div`\r\n  color: rgba(2, 7, 62, 0.8);\r\n  max-width: 340px;\r\n  font-size: 14px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Large = styled(Link)`\r\n  font-size: 16px;\r\n  color: rgba(2, 7, 62, 0.8);\r\n  text-align: ${(props) => (props.left ? 'left' : '')};\r\n  padding: ${(props) => (props.left ? '0 10%' : '')};\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-transform: capitalize;\r\n  line-height: 24px;\r\n  display: block;\r\n  margin-bottom: 0.625rem;\r\n\r\n  &:hover {\r\n    color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n\r\nexport const Chat = styled.p`\r\n  color: rgba(2, 7, 62, 0.8);\r\n  max-width: 85px;\r\n  border-bottom: 1px solid rgba(2, 7, 62, 0.8);\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n\r\n  &:hover {\r\n    border-bottom: 1px solid rgb(255, 130, 92);\r\n    color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n\r\nexport const Empty = styled.div`\r\n  position: relative;\r\n  height: 53px;\r\n`;\r\n\r\nexport const FooterContainer = styled.div`\r\n  max-width: 510px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 414px) {\r\n    padding: 2rem 0;\r\n    padding-right: 50%;\r\n  }\r\n\r\n  div {\r\n    cursor: pointer;\r\n    margin-right: 15px;\r\n    width: 25px;\r\n    height: 25px;\r\n\r\n    &:hover {\r\n      fill: rgb(255, 130, 92);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Hidden = styled.div`\r\n  display: contents;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 414px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Language = styled.h4`\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n\r\n  @media screen and (max-width: 414px) {\r\n    padding: 1.5rem 0;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  display: block;\r\n  margin-bottom: 2rem;\r\n\r\n  @media screen and (max-width: 414px) {\r\n    padding: 1.5rem 0;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nexport const LangSelect = styled.select`\r\n  cursor: pointer;\r\n  border: none;\r\n  font-size: 1rem;\r\n  background: rgb(249, 250, 252);\r\n`;\r\n","import React, { Fragment } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport i18n from 'i18next';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Fade } from 'react-reveal';\r\nimport loadable from '@loadable/component';\r\n\r\nimport * as S from './styles';\r\n\r\nconst SvgIcon = loadable(() => import('../../common/SvgIcon'));\r\nconst Container = loadable(() => import('../../common/Container'));\r\n\r\nconst Footer = ({ t }) => {\r\n  const handleChange = (event) => {\r\n    i18n.changeLanguage(event.target.value);\r\n  };\r\n\r\n  const SocialLink = ({ href, src }) => {\r\n    return (\r\n      <a\r\n        href={href}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        key={src}\r\n        aria-label={src}\r\n      >\r\n        <SvgIcon src={src} />\r\n      </a>\r\n    );\r\n  };\r\n\r\n  return (\r\n\r\n        // <S.Footer>\r\n          // <Container>\r\n          //   <Row type=\"flex\" justify=\"space-between\">\r\n          //     <Col lg={10} md={10} sm={12} xs={24}>\r\n          //       <S.Language>{t('Contact')}</S.Language>\r\n          //       <S.Large to=\"/\">{t('Tell us everything')}</S.Large>\r\n          //       <S.Para>\r\n          //         {t(\r\n          //           `Do you have any question regarding the project? Feel free to reach out.`\r\n          //         )}\r\n          //       </S.Para>\r\n          //       <a href=\"mailto:l.qqbadze@gmail.com\">\r\n          //         <S.Chat>{t(`Let's Chat`)}</S.Chat>\r\n          //       </a>\r\n          //     </Col>\r\n          //     <Col lg={8} md={8} sm={12} xs={24}>\r\n          //       <S.Title>{t('Policy')}</S.Title>\r\n          //       <S.Large to=\"/\" left=\"true\">\r\n          //         {t('Application Security')}\r\n          //       </S.Large>\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('Software Principles')}\r\n          //       </S.Large>\r\n          //     </Col>\r\n          //     <Col lg={6} md={6} sm={12} xs={24}>\r\n          //       <S.Empty />\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('Support Center')}\r\n          //       </S.Large>\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('Customer Support')}\r\n          //       </S.Large>\r\n          //     </Col>\r\n          //   </Row>\r\n          //   <Row type=\"flex\" justify=\"space-between\">\r\n          //     <Col lg={10} md={10} sm={12} xs={24}>\r\n          //       <S.Empty />\r\n          //       <S.Language>{t('ADDRESS')}</S.Language>\r\n          //       <S.Para>Rancho Santa Margarita</S.Para>\r\n          //       <S.Para>2131 Elk Street</S.Para>\r\n          //       <S.Para>California</S.Para>\r\n          //     </Col>\r\n          //     <Col lg={8} md={8} sm={12} xs={24}>\r\n          //       <S.Title>{t('Company')}</S.Title>\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('About')}\r\n          //       </S.Large>\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('Blog')}\r\n          //       </S.Large>\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('Press')}\r\n          //       </S.Large>\r\n          //       <S.Large left=\"true\" to=\"/\">\r\n          //         {t('Careers & Culture')}\r\n          //       </S.Large>\r\n          //     </Col>\r\n              // <Col lg={6} md={6} sm={12} xs={24}>\r\n              //   <S.Select>\r\n              //     <S.Label htmlFor=\"select-lang\">{t('Language')}</S.Label>\r\n              //     // <S.LangSelect\r\n              //     //   onChange={handleChange}\r\n              //     //   value={i18n.language}\r\n              //     //   id=\"select-lang\"\r\n              //     // >\r\n              //     //   <option value=\"en\">English</option>\r\n              //     //   <option value=\"es\">Español</option>\r\n              //     // </S.LangSelect>\r\n              //   </S.Select>\r\n              // </Col>\r\n          //   </Row>\r\n          // </Container>\r\n        // </S.Footer>\r\n        <Fragment>\r\n          <Fade bottom>\r\n        <S.Extra>\r\n          <Container border=\"true\">\r\n            <Row\r\n              type=\"flex\"\r\n              justify=\"space-between\"\r\n              align=\"middle\"\r\n              style={{ paddingTop: '3rem' }}\r\n            >\r\n              <S.NavLink to=\"/\">\r\n                <S.LogoContainer>\r\n                  <Row>\r\n                  <SvgIcon src=\"logo2.svg\" aria-label=\"homepage\"/>\r\n                  <Col>\r\n                    <SvgIcon src=\"logo.svg\" aria-label=\"homepage\"/>\r\n                    <p>by <a rel=\"noreferrer\" href=\"https://codingee.com/\" target=\"_blank\">codingee</a></p>\r\n                    </Col>\r\n                    </Row>\r\n                </S.LogoContainer>\r\n              </S.NavLink>\r\n              <S.FooterContainer>\r\n                <SocialLink\r\n                  href=\"https://github.com/Codingee\"\r\n                  src=\"github.svg\"\r\n                />\r\n                <SocialLink\r\n                  href=\"https://www.linkedin.com/in/aryan-ganotra-a818aa179/\"\r\n                  src=\"linkedin.svg\"\r\n                />\r\n                <SocialLink\r\n                  href=\"https://www.instagram.com/codin_gee/?hl=en\"\r\n                  src=\"instagram.svg\"\r\n                />\r\n              </S.FooterContainer>\r\n            </Row>\r\n          </Container>\r\n        </S.Extra>\r\n      </Fade>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Footer);\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nexport const Header = styled.header`\r\n  padding: 1rem 0.5rem;\r\n`;\r\n\r\nexport const LogoContainer = styled(Link)`\r\n  display: flex;\r\n  padding-top: 1rem;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  padding-right: 25px;\r\n  padding-left: 25px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const NavLink = styled.div`\r\n  display: inline-block;\r\n  text-align: center;\r\n`;\r\n\r\nexport const CustomNavLink = styled.div`\r\n  width: 203px;\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 411px) {\r\n    width: 150px;\r\n  }\r\n\r\n  @media only screen and (max-width: 320px) {\r\n    width: 118px;\r\n  }\r\n`;\r\n\r\nexport const ContactWrapper = styled.div`\r\n  cursor: pointer;\r\n  width: ${(props) => (props.width ? '100%' : '110px')};\r\n  font-weight: 700;\r\n  text-align: center;\r\n  border-radius: 1.25rem;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Burger = styled.div`\r\n  @media only screen and (max-width: 768px) {\r\n    display: block !important;\r\n  }\r\n  padding: 1.25rem 1.25rem;\r\n  display: none;\r\n`;\r\n\r\nexport const NotHidden = styled.div`\r\n  @media only screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Menu = styled.h5`\r\n  font-size: 1.37rem;\r\n  margin-top: -0.45rem;\r\n  padding: 0 1.56rem 0 0;\r\n  font-weight: 600;\r\n  border-bottom: 5px solid #111b47;\r\n`;\r\n\r\nexport const CustomNavLinkSmall = styled(NavLink)`\r\n  font-size: 1rem;\r\n  color: #000000;\r\n  transition: color 0.2s ease-in;\r\n  margin: 0.25rem 2rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    margin: 1.25rem 2rem;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: #404041;\r\n  text-align: right;\r\n  display: flex;\r\n`;\r\n\r\nexport const Outline = styled(MenuOutlined)`\r\n  font-size: 22px;\r\n  padding-right: ${(props) => (props.padding ? '10px' : '')};\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Row, Col, Drawer } from 'antd';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { withTranslation } from 'react-i18next';\r\nimport loadable from '@loadable/component';\r\n\r\nimport * as S from './styles';\r\n\r\nconst SvgIcon = loadable(() => import('../../common/SvgIcon'));\r\nconst Button = loadable(() => import('../../common/Button'));\r\n\r\nconst Header = ({ t }) => {\r\n  const [isNavVisible] = useState(false);\r\n  const [isSmallScreen] = useState(false);\r\n  const [visible, setVisibility] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisibility(!visible);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisibility(!visible);\r\n  };\r\n\r\n  const MenuItem = () => {\r\n    const scrollTo = (id) => {\r\n      const element = document.getElementById(id);\r\n      element.scrollIntoView({\r\n        behavior: 'smooth',\r\n      });\r\n      setVisibility(false);\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <S.CustomNavLinkSmall onClick={() => scrollTo('about')}>\r\n          <S.Span>{t('About')}</S.Span>\r\n        </S.CustomNavLinkSmall>\r\n        <S.CustomNavLinkSmall onClick={() => scrollTo('mission')}>\r\n          <S.Span>{t('Mission')}</S.Span>\r\n        </S.CustomNavLinkSmall>\r\n        <S.CustomNavLinkSmall onClick={() => scrollTo('product')}>\r\n          <S.Span>{t('Product')}</S.Span>\r\n        </S.CustomNavLinkSmall>\r\n        <S.CustomNavLinkSmall\r\n          style={{ width: '180px' }}\r\n          onClick={() => scrollTo('contact')}\r\n        >\r\n          <S.Span>\r\n            <Button>{t('Contact')}</Button>\r\n          </S.Span>\r\n        </S.CustomNavLinkSmall>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <S.Header>\r\n      <S.Container>\r\n        <Row type=\"flex\" justify=\"space-between\" gutter={20}>\r\n          <S.LogoContainer to=\"/\" aria-label=\"homepage\">\r\n          <Row>\r\n          <SvgIcon src=\"logo2.svg\" />\r\n          <Col>\r\n            <SvgIcon src=\"logo.svg\" />\r\n            <p>by <a rel=\"noreferrer\" href=\"https://codingee.com/\" target=\"_blank\">codingee</a></p>\r\n            </Col>\r\n            </Row>\r\n          </S.LogoContainer>\r\n          <S.NotHidden>\r\n            <MenuItem />\r\n          </S.NotHidden>\r\n          <S.Burger onClick={showDrawer}>\r\n            <S.Outline />\r\n          </S.Burger>\r\n        </Row>\r\n        <CSSTransition\r\n          in={!isSmallScreen || isNavVisible}\r\n          timeout={350}\r\n          classNames=\"NavAnimation\"\r\n          unmountOnExit\r\n        >\r\n          <Drawer closable={false} visible={visible} onClose={onClose}>\r\n            <Col style={{ marginBottom: '2.5rem' }}>\r\n              <S.Label onClick={onClose}>\r\n                <Col span={12}>\r\n                  <S.Menu>Menu</S.Menu>\r\n                </Col>\r\n                <Col span={12}>\r\n                  <S.Outline padding=\"true\" />\r\n                </Col>\r\n              </S.Label>\r\n            </Col>\r\n            <MenuItem />\r\n          </Drawer>\r\n        </CSSTransition>\r\n      </S.Container>\r\n    </S.Header>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Header);\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\n\r\nimport IntroContent from '../../content/IntroContent.json';\r\nimport MiddleBlockContent from '../../content/MiddleBlockContent.json';\r\nimport AboutContent from '../../content/AboutContent.json';\r\nimport MissionContent from '../../content/MissionContent.json';\r\nimport ProductContent from '../../content/ProductContent.json';\r\nimport ContactContent from '../../content/ContactContent.json';\r\n\r\nconst ContactFrom = loadable(() => import('../../components/ContactForm'));\r\nconst ContentBlock = loadable(() => import('../../components/ContentBlock'));\r\nconst MiddleBlock = loadable(() => import('../../components/MiddleBlock'));\r\nconst Container = loadable(() => import('../../common/Container'));\r\nconst ScrollToTop = loadable(() => import('../../common/ScrollToTop'));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <ScrollToTop />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        first=\"true\"\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        button={IntroContent.button}\r\n        icon=\"search.svg\"\r\n        id=\"intro\"\r\n      />\r\n      <MiddleBlock\r\n        title={MiddleBlockContent.title}\r\n        content={MiddleBlockContent.text}\r\n        button={MiddleBlockContent.button}\r\n      />\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title={AboutContent.title}\r\n        content={AboutContent.text}\r\n        section={AboutContent.section}\r\n        icon=\"graphs.svg\"\r\n        id=\"about\"\r\n      />\r\n      <ContentBlock\r\n        type=\"right\"\r\n        title={MissionContent.title}\r\n        content={MissionContent.text}\r\n        icon=\"product-launch.svg\"\r\n        id=\"mission\"\r\n      />\r\n\r\n      <ContentBlock\r\n        type=\"left\"\r\n        title={ProductContent.title}\r\n        content={ProductContent.text}\r\n        icon=\"waving.svg\"\r\n        id=\"product\"\r\n      />\r\n      <ContactFrom\r\n        title={ContactContent.title}\r\n        content={ContactContent.text}\r\n        id=\"contact\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst Styles = createGlobalStyle`\r\n\r\n    body,\r\n    html,\r\n    a {\r\n        font-family: 'Ubuntu', sans-serif;\r\n    }\r\n\r\n\r\n    body {\r\n        margin:0;\r\n        padding:0;\r\n        border: 0;\r\n        outline: 0;\r\n        background: #fff;\r\n        overflow-x: hidden;\r\n    }\r\n\r\n    a:hover {\r\n        color: #000;\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n        font-family: 'Ubuntu', sans-serif;\r\n        color: #0a1f44;\r\n        font-size: 2.575rem;\r\n        line-height: 3.0625rem;\r\n      \r\n        @media only screen and (max-width: 414px) {\r\n          font-size: 1.625rem;\r\n        }\r\n    }\r\n\r\n    p {\r\n        color: #343D48;\r\n        font-size: 1.125rem;\r\n    }\r\n\r\n    h1 {\r\n        font-weight: 600;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        outline: none;\r\n        color: #2E186A;\r\n\r\n        :hover {\r\n            color: #2e186a;\r\n        }\r\n    }\r\n    \r\n    *:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .about-block-image svg {\r\n        text-align: center;\r\n    }\r\n\r\n    .ant-drawer-body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 1.25rem;\r\n        text-align: left;\r\n        padding-top: 2.5rem;\r\n        padding-right: 2rem;\r\n    }\r\n\r\n    .anticon,\r\n    .ant-notification-notice-icon-success {\r\n        color: rgb(255,130,92);\r\n    }\r\n`;\r\n\r\nexport default Styles;\r\n","import React from 'react';\r\n\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport Home from '../pages/Home';\r\n\r\nimport GlobalStyles from '../globalStyles';\r\n\r\nconst Router = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles />\r\n      <Header />\r\n      <Home />\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport XHR from \"i18next-xhr-backend\";\r\n\r\nimport translationEn from \"./locales/en/translation.json\";\r\nimport translationEs from \"./locales/es/translation.json\";\r\n\r\ni18n\r\n  .use(XHR)\r\n  .use(LanguageDetector)\r\n  .init({\r\n    debug: false,\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n\r\n    resources: {\r\n      en: {\r\n        translations: translationEn,\r\n      },\r\n      es: {\r\n        translations: translationEs,\r\n      },\r\n    },\r\n    ns: [\"translations\"],\r\n    defaultNS: \"translations\",\r\n  });\r\n\r\nexport default i18n;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport { I18nextProvider } from 'react-i18next';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Router from './router';\r\nimport i18n from './translation';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <I18nextProvider i18n={i18n}>\r\n      <Router />\r\n    </I18nextProvider>\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}